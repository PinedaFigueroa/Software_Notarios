"""Big Bang: Initial creation

Revision ID: 190598888acc
Revises: 
Create Date: 2025-08-05 15:54:41.387652

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '190598888acc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('planes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('descripcion', sa.String(length=255), nullable=True),
    sa.Column('max_notarios', sa.Integer(), nullable=False),
    sa.Column('max_procuradores', sa.Integer(), nullable=False),
    sa.Column('max_asistentes', sa.Integer(), nullable=False),
    sa.Column('max_documentos', sa.Integer(), nullable=False),
    sa.Column('storage_mb', sa.Integer(), nullable=False),
    sa.Column('precio_mensual', sa.Float(), nullable=False),
    sa.Column('es_personalizado', sa.Boolean(), nullable=True),
    sa.Column('activo', sa.Boolean(), nullable=True),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=True),
    sa.Column('fecha_actualizacion', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('bufetes_juridicos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre_bufete_o_razon_social', sa.String(length=255), nullable=False),
    sa.Column('direccion', sa.String(length=255), nullable=True),
    sa.Column('telefono', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=150), nullable=True),
    sa.Column('nit', sa.String(length=50), nullable=True),
    sa.Column('pais', sa.String(length=50), nullable=True),
    sa.Column('app_copyright', sa.String(length=255), nullable=True),
    sa.Column('nombre_aplicacion', sa.String(length=255), nullable=True),
    sa.Column('maneja_inventario_timbres_papel', sa.Boolean(), nullable=False),
    sa.Column('incluye_libreria_plantillas_inicial', sa.Boolean(), nullable=False),
    sa.Column('habilita_auditoria_borrado_logico', sa.Boolean(), nullable=False),
    sa.Column('habilita_dashboard_avanzado', sa.Boolean(), nullable=False),
    sa.Column('habilita_ayuda_contextual', sa.Boolean(), nullable=False),
    sa.Column('facturacion_nombre', sa.String(length=255), nullable=True),
    sa.Column('facturacion_nit', sa.String(length=50), nullable=True),
    sa.Column('facturacion_direccion', sa.String(length=255), nullable=True),
    sa.Column('formas_pago', sa.String(length=150), nullable=True),
    sa.Column('metodo_pago_preferido', sa.String(length=50), nullable=True),
    sa.Column('activo', sa.Boolean(), nullable=True),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=True),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['planes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre_bufete_o_razon_social')
    )
    op.create_table('cuenta_corriente',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bufete_id', sa.Integer(), nullable=True),
    sa.Column('fecha', sa.Date(), nullable=True),
    sa.Column('descripcion', sa.String(length=200), nullable=False),
    sa.Column('monto', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['bufete_id'], ['bufetes_juridicos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pagos_bufete',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bufete_id', sa.Integer(), nullable=True),
    sa.Column('monto_pagado', sa.Float(), nullable=False),
    sa.Column('fecha_pago', sa.Date(), nullable=True),
    sa.Column('forma_pago', sa.Enum('EFECTIVO', 'CHEQUE', 'TARJETA', name='formapagoenum'), nullable=False),
    sa.Column('detalle', sa.String(length=250), nullable=True),
    sa.ForeignKeyConstraint(['bufete_id'], ['bufetes_juridicos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usuarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('correo', sa.String(length=150), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('rol', sa.Enum('SUPERADMIN', 'ADMINISTRADOR', 'NOTARIO', 'PROCURADOR', 'ASISTENTE', name='rolusuarioenum'), nullable=False),
    sa.Column('estado', sa.Enum('ACTIVO', 'INACTIVO', 'SUSPENDIDO', name='estadousuarioenum'), nullable=True),
    sa.Column('nombres', sa.String(length=100), nullable=True),
    sa.Column('apellidos', sa.String(length=100), nullable=True),
    sa.Column('telefono', sa.String(length=20), nullable=True),
    sa.Column('direccion_laboral', sa.String(length=255), nullable=True),
    sa.Column('preferencia_contacto_red_social', sa.String(length=100), nullable=True),
    sa.Column('bufete_id', sa.Integer(), nullable=True),
    sa.Column('borrado_logico', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['bufete_id'], ['bufetes_juridicos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('asistentes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notario_procurador_asociacion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notario_id', sa.Integer(), nullable=False),
    sa.Column('procurador_id', sa.Integer(), nullable=False),
    sa.Column('bufete_id', sa.Integer(), nullable=False),
    sa.Column('fecha_asignacion', sa.DateTime(), nullable=True),
    sa.Column('fecha_reasignacion', sa.DateTime(), nullable=True),
    sa.Column('motivo_reasignacion', sa.String(length=255), nullable=True),
    sa.Column('activo', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['bufete_id'], ['bufetes_juridicos.id'], ),
    sa.ForeignKeyConstraint(['notario_id'], ['usuarios.id'], ),
    sa.ForeignKeyConstraint(['procurador_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_colegiado', sa.String(length=20), nullable=False),
    sa.Column('colegiado_activo', sa.Boolean(), nullable=False),
    sa.Column('fecha_verificacion', sa.DateTime(), nullable=True),
    sa.Column('firma_electronica_registrada', sa.Boolean(), nullable=True),
    sa.Column('proveedor_firma_electronica', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('procuradores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documentos_notariales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipo_documento', sa.Enum('ESCRITURA_PUBLICA', 'ACTA_NOTARIAL', 'AVISO', name='tipodocumentoenum'), nullable=False),
    sa.Column('numero_instrumento', sa.Integer(), nullable=False),
    sa.Column('fecha_otorgamiento', sa.Date(), nullable=False),
    sa.Column('hora_otorgamiento', sa.Time(), nullable=True),
    sa.Column('lugar_otorgamiento', sa.String(length=200), nullable=True),
    sa.Column('estado_documento', sa.Enum('BORRADOR', 'EN_REVISION', 'FINALIZADO', 'ENTREGADO', 'ANULADO', name='estadodocumentoenum'), nullable=False),
    sa.Column('notario_id', sa.Integer(), nullable=True),
    sa.Column('procurador_id', sa.Integer(), nullable=True),
    sa.Column('bufete_id', sa.Integer(), nullable=True),
    sa.Column('activo', sa.Boolean(), nullable=True),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=True),
    sa.Column('fecha_actualizacion', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bufete_id'], ['bufetes_juridicos.id'], ),
    sa.ForeignKeyConstraint(['notario_id'], ['notarios.id'], ),
    sa.ForeignKeyConstraint(['procurador_id'], ['procuradores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notario_asistente',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notario_id', sa.Integer(), nullable=True),
    sa.Column('asistente_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['asistente_id'], ['usuarios.id'], ),
    sa.ForeignKeyConstraint(['notario_id'], ['notarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notario_procurador',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notario_id', sa.Integer(), nullable=True),
    sa.Column('procurador_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['notario_id'], ['notarios.id'], ),
    sa.ForeignKeyConstraint(['procurador_id'], ['procuradores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notario_procurador')
    op.drop_table('notario_asistente')
    op.drop_table('documentos_notariales')
    op.drop_table('procuradores')
    op.drop_table('notarios')
    op.drop_table('notario_procurador_asociacion')
    op.drop_table('asistentes')
    op.drop_table('usuarios')
    op.drop_table('pagos_bufete')
    op.drop_table('cuenta_corriente')
    op.drop_table('bufetes_juridicos')
    op.drop_table('planes')
    # ### end Alembic commands ###
